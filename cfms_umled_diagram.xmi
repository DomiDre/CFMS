<?xml version="1.0" encoding="UTF-8"?>
<XMI xmi.version="1.2" timestamp="2017-10-23T09:52:18" xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.6.9</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML"/>
 </XMI.header>
 <XMI.content>
  <UML:Model xmi.id="m1" isLeaf="false" name="UML Model" isAbstract="false" isSpecification="false" isRoot="false">
   <UML:Namespace.ownedElement>
    <UML:Stereotype xmi.id="folder" visibility="public" isLeaf="false" name="folder" isAbstract="false" isSpecification="false" namespace="m1" isRoot="false"/>
    <UML:Stereotype xmi.id="datatype" visibility="public" isLeaf="false" name="datatype" isAbstract="false" isSpecification="false" namespace="m1" isRoot="false"/>
    <UML:Model xmi.id="Logical View" visibility="public" isLeaf="false" name="Logical View" stereotype="folder" isAbstract="false" isSpecification="false" namespace="m1" isRoot="false">
     <UML:Namespace.ownedElement>
      <UML:Package xmi.id="Datatypes" visibility="public" isLeaf="false" name="Datatypes" stereotype="folder" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false">
       <UML:Namespace.ownedElement>
        <UML:DataType xmi.id="6MebLl1Ek9lq" visibility="public" isLeaf="false" name="int" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="GrGy0Bp3JDNt" visibility="public" isLeaf="false" name="char" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="bAqHwrn1DRcW" visibility="public" isLeaf="false" name="bool" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="AbivjTlxI0vI" visibility="public" isLeaf="false" name="float" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="9iJRvhKUrAjm" visibility="public" isLeaf="false" name="double" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="1XlCwLj7vR0e" visibility="public" isLeaf="false" name="short" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="tlb9jUStAlK3" visibility="public" isLeaf="false" name="long" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="QeXGoH0nmlzi" visibility="public" isLeaf="false" name="unsigned int" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="6gn16ndzXC8G" visibility="public" isLeaf="false" name="unsigned short" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="eY9oITrg5Pwr" visibility="public" isLeaf="false" name="unsigned long" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="eueQfe6kKulO" visibility="public" isLeaf="false" name="string" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="hNNEZUTE0c0I" visibility="public" isLeaf="false" name="array" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="4sz9Ft1todJR" visibility="public" isLeaf="false" name="tuple" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="FNBYHvwxIK9p" visibility="public" isLeaf="false" name="dict" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="mc3mF23Hu0O9" visibility="public" isLeaf="false" name="object" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="tP0f1H5GeGow" visibility="public" isLeaf="false" name="set" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="W5aPuGOla1IM" visibility="public" isLeaf="false" name="*double, *double, *double, *double" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="sMqKb1jahREt" visibility="public" isLeaf="false" name="double[*]" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="TE86II4nMeAG" visibility="public" isLeaf="false" name="double[*], double[*], double[*], double[*]" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
        <UML:DataType xmi.id="sW1TVHnMddgC" visibility="public" isLeaf="false" name="double[*], double[*]" stereotype="datatype" isAbstract="false" isSpecification="false" namespace="Datatypes" isRoot="false"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class xmi.id="9ltR32HpdIZq" visibility="public" isLeaf="false" name="CFMS" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="aC8FRx9ag02j"/>
        <UML:Generalization xmi.idref="XeEI5F5PmTMs"/>
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization xmi.id="aC8FRx9ag02j" visibility="public" name="" discriminator="" child="9ltR32HpdIZq" parent="Kc7CcVLUtJ7u" isSpecification="false" namespace="Logical View"/>
      <UML:Class xmi.id="Kc7CcVLUtJ7u" visibility="public" isLeaf="false" name="CFMSDataTreater" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="cdPhDVotQjKF"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute xmi.id="zjINTadCas9k" visibility="public" type="QOUQ0IZiF5QE" name="data_container" isSpecification="false"/>
        <UML:Attribute xmi.id="Fa4pQDXfOctt" visibility="public" type="eueQfe6kKulO" name="log" isSpecification="false"/>
        <UML:Operation xmi.id="ue4ae4HeJnIq" visibility="public" isLeaf="false" name="__init__" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false"/>
        <UML:Operation xmi.id="O84Q5ZsyBuWp" visibility="public" isLeaf="false" name="add_log" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ymSFZk5QTovn" visibility="private" type="eueQfe6kKulO" name="entry" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="6taIn65jsXyQ" visibility="public" isLeaf="false" name="print_log" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="F4ohqkSNTc1i" visibility="private" type="eueQfe6kKulO" name="entry" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="vQnmwlABnysb" visibility="public" isLeaf="false" name="load" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false" comment="&quot;) or linestrip == &quot;&quot;:">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="gLw9vxrxPCaN" visibility="private" type="eueQfe6kKulO" name="data_path" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="NSFAO8m5RgEK" visibility="public" isLeaf="false" name="reduce_averages" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="LIwGu2HCa3DT" visibility="private" type="6MebLl1Ek9lq" name="N_averages" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="6I1VyGpaI6bU" visibility="public" isLeaf="false" name="clean_peaks" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false" comment="he doesnt like circ and mu in my Ubuntuhe doesnt like circ and mu in my Ubuntu">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="qzecXgzyLNPg" visibility="private" type="6MebLl1Ek9lq" name="M_threshold" isSpecification="false" value="1"/>
          <UML:Parameter xmi.id="czfM4Kw42i7u" visibility="private" type="6MebLl1Ek9lq" name="M_npts_mean" isSpecification="false" value="11"/>
          <UML:Parameter xmi.id="2jo5sXbEJw68" visibility="private" type="6MebLl1Ek9lq" name="B_threshold" isSpecification="false" value="0.1"/>
          <UML:Parameter xmi.id="NoNsoQHrlsU8" visibility="private" type="6MebLl1Ek9lq" name="B_npts_mean" isSpecification="false" value="5"/>
          <UML:Parameter xmi.id="4A56sAz5r5ZT" visibility="private" type="bAqHwrn1DRcW" name="TM_mode" isSpecification="false" value="False"/>
          <UML:Parameter xmi.id="ICQplTcmgEky" visibility="private" type="bAqHwrn1DRcW" name="show" isSpecification="false" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="ey0u5aOzWcZB" visibility="public" isLeaf="false" name="remove_virgin_data" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="CB2QQiVpIc6y" visibility="private" type="6MebLl1Ek9lq" name="up_to" isSpecification="false" value="6.9"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="14CXfmi2F5cR" visibility="public" isLeaf="false" name="fit_diamagnetism" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="K0MD5JeFUhgu" visibility="private" type="9iJRvhKUrAjm" name="B0" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="A6yCIjkah4nn" visibility="private" type="9iJRvhKUrAjm" name="B1" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="EhgmBvGM0EWI" visibility="private" type="9iJRvhKUrAjm" name="m_init" isSpecification="false" value="None"/>
          <UML:Parameter xmi.id="yHqfJbQh0RW5" visibility="private" type="9iJRvhKUrAjm" name="b_init" isSpecification="false" value="None"/>
          <UML:Parameter xmi.id="5EUvfZUrE8dQ" visibility="private" type="bAqHwrn1DRcW" name="vary_m" isSpecification="false" value="True"/>
          <UML:Parameter xmi.id="3rk36GJ2V9fp" visibility="private" type="bAqHwrn1DRcW" name="vary_b" isSpecification="false" value="True"/>
          <UML:Parameter xmi.id="k4UjVyoYCGRp" visibility="private" type="bAqHwrn1DRcW" name="fit_both_sides" isSpecification="false" value="True"/>
          <UML:Parameter xmi.id="qvh21IQ3AA6E" visibility="private" type="bAqHwrn1DRcW" name="show" isSpecification="false" value="True"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="M2UiDPk80nGf" visibility="public" isLeaf="false" name="get_diamagnetic_slope" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="TqZWoTSeonAW" type="9iJRvhKUrAjm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="bWqJYwOswsY9" visibility="public" isLeaf="false" name="get_diamagnetic_offset" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="HIFF6TuXJR25" type="9iJRvhKUrAjm" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="tUjhFtDoP48v" visibility="public" isLeaf="false" name="set_diamagnetic_slope" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="8jxIzO8nInoH" visibility="private" type="9iJRvhKUrAjm" name="slope" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="fsi5woysIkke" visibility="public" isLeaf="false" name="get" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="k9F3rxftitXf" type="sMqKb1jahREt" kind="return"/>
          <UML:Parameter xmi.id="TIUORPlX8iq6" visibility="private" type="eueQfe6kKulO" name="string" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="JLz4xZLOrpkJ" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
          <UML:Parameter xmi.id="DVoJBePGaHYH" visibility="private" type="bAqHwrn1DRcW" name="supress_log" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="vqIiJtbyZWKz" visibility="public" isLeaf="false" name="get_B" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="8u6olcSgQkOi" type="sMqKb1jahREt" kind="return"/>
          <UML:Parameter xmi.id="YmcNZNemsT42" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
          <UML:Parameter xmi.id="5RIggovbxxN0" visibility="private" type="bAqHwrn1DRcW" name="supress_log" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="dygBU0AaaHA3" visibility="public" isLeaf="false" name="get_T" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="jct8MFqzDW8g" type="sMqKb1jahREt" kind="return"/>
          <UML:Parameter xmi.id="0wDQnyZqh93k" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="VJG3YO63TOvj" visibility="public" isLeaf="false" name="get_M" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="el8sFGWkXmn6" type="sMqKb1jahREt" kind="return"/>
          <UML:Parameter xmi.id="7lmHqoHavO5x" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="Bs9cG2JAyMW2" visibility="public" isLeaf="false" name="get_BM" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uTRRECXN4fzK" type="sW1TVHnMddgC" kind="return"/>
          <UML:Parameter xmi.id="9OiJ1ms3yuNX" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="fHTedxgDzTaS" visibility="public" isLeaf="false" name="get_TM" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="uYTwBRFriiTL" type="sW1TVHnMddgC" kind="return"/>
          <UML:Parameter xmi.id="B6XcjTIduh36" visibility="private" type="eueQfe6kKulO" name="get_all_points" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="f7Wca54lBZNs" visibility="public" isLeaf="false" name="get_BMavg" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="0dWtLXzD5T9F" type="TE86II4nMeAG" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="sO6a4ZvhgPJE" visibility="public" isLeaf="false" name="get_TMavg" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="ULxdtKWtv0mE" type="TE86II4nMeAG" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="cpFf8ybQxv2C" visibility="public" isLeaf="false" name="export" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false" comment="\n#B / T\tM / memu\tT / K\n&quot;)')">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="jaDmnOyRMXsM" visibility="private" type="eueQfe6kKulO" name="export_file" isSpecification="false" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="1D6y889O14Yo" visibility="public" isLeaf="false" name="export_avg" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false" comment="\n#B / T\tsB / T\tM / memu\tsM / memu\tT / K\tsT / K\n&quot;)">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="d0bR2vSigReF" visibility="private" type="eueQfe6kKulO" name="export_file" isSpecification="false" value="None"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="ixWhz2W74yD1" visibility="public" isLeaf="false" name="show" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false"/>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class xmi.id="QOUQ0IZiF5QE" visibility="public" isLeaf="false" name="CFMSData" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="WA94onjJgQGy"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute xmi.id="n0hJmjSBRog1" visibility="public" type="dOEz1MEtsDMN" name="header" initialValue="[]" isSpecification="false"/>
        <UML:Attribute xmi.id="9qJbnkvFD68M" visibility="public" type="FNBYHvwxIK9p" name="data" initialValue="{}" isSpecification="false"/>
        <UML:Attribute xmi.id="tb0kEpw0nbJZ" visibility="public" type="6MebLl1Ek9lq" name="N_pts" initialValue="0" isSpecification="false"/>
        <UML:Attribute xmi.id="qHB2uQj2P1iS" visibility="public" type="bAqHwrn1DRcW" name="data_loaded" initialValue="False" isSpecification="false"/>
        <UML:Attribute xmi.id="ojellF3SlGfb" visibility="public" type="FNBYHvwxIK9p" name="averaged_data" initialValue="{}" isSpecification="false"/>
        <UML:Attribute xmi.id="EXYwYiOMxaNr" visibility="public" type="6MebLl1Ek9lq" name="N_pts_averaged" initialValue="0" isSpecification="false"/>
        <UML:Attribute xmi.id="y6tN8couJSd4" visibility="public" type="eueQfe6kKulO" name="B_string" initialValue="'B_analog_(T)'" isSpecification="false"/>
        <UML:Attribute xmi.id="fgXQxC09hY3D" visibility="public" type="eueQfe6kKulO" name="T_string" initialValue="'sensor_B_(K)'" isSpecification="false"/>
        <UML:Attribute xmi.id="EPZCzw3w1vH7" visibility="public" type="eueQfe6kKulO" name="M_string" initialValue="'moment_(emu)'" isSpecification="false"/>
        <UML:Attribute xmi.id="V5zoVatBFObC" visibility="public" type="bAqHwrn1DRcW" name="data_averaged" initialValue="False" isSpecification="false"/>
        <UML:Attribute xmi.id="YZJF6MSKlzUj" visibility="public" type="0aoJVHyIpFxa" name="valid_point" initialValue="None" isSpecification="false"/>
        <UML:Attribute xmi.id="uWdtRuyuyxgT" visibility="public" type="EuLk2hlR12dZ" name="diamagnetic_fit" initialValue="None" isSpecification="false"/>
        <UML:Attribute xmi.id="VZckvEuRlDer" visibility="public" type="bAqHwrn1DRcW" name="do_diamagnetic_correction" initialValue="False" isSpecification="false"/>
        <UML:Operation xmi.id="5wJ9sVALi1bQ" visibility="public" isLeaf="false" name="__init__" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false" comment="Container class for storing and retrieving CFMS data.Datafiles: first line is header. For each entry in header is a list of numbers in dataaveraged over every n-th point Array which points are valid and which not (filled from clean_peaks) lmfit MinimizerResult object"/>
        <UML:Operation xmi.id="yzKB2kN8ehHV" visibility="public" isLeaf="false" name="set_data" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="V7j6kNJPj1lW" visibility="private" type="dOEz1MEtsDMN" name="header" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="76LxJgLmn2tY" visibility="private" type="FNBYHvwxIK9p" name="data" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="dBx0rq0pu1Pd" visibility="public" isLeaf="false" name="set_averaged_data" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="RrnsbdKijge1" visibility="private" type="6MebLl1Ek9lq" name="N_averages" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="G39qQRjqHVgq" visibility="private" type="sMqKb1jahREt" name="Bavg" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="mYIhlk0Pt7HX" visibility="private" type="sMqKb1jahREt" name="Tavg" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="JoQ7Or5duFTJ" visibility="private" type="sMqKb1jahREt" name="Mavg" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="8nq5xfFFlnsf" visibility="public" isLeaf="false" name="set_data_invalid" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="xxxo2CLsBcXL" visibility="private" type="0aoJVHyIpFxa" name="invalid_points" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="crYLdO0L9Ai1" visibility="public" isLeaf="false" name="set_diamagnetic_fit" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="IP1R8Ic2td55" visibility="private" type="EuLk2hlR12dZ" name="diamagnetic_fit" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="5sCC3sEoZS5P" visibility="public" isLeaf="false" name="check_data_loaded" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="dUffWICmhDDo" visibility="private" type="eueQfe6kKulO" name="data_string" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="hgOE6Reegpvo" visibility="public" isLeaf="false" name="check_average_data_loaded" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="zOMEakQAIDyT" visibility="private" type="eueQfe6kKulO" name="data_string" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="ntZShSGgoasO" visibility="public" isLeaf="false" name="get" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="KHYaUU4L3nkP" visibility="private" type="eueQfe6kKulO" name="string" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="baApVu68Ollt" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="q1ptmXHiGjUJ" visibility="public" isLeaf="false" name="get_B" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="rMJtiGNYHCP2" type="sMqKb1jahREt" kind="return"/>
          <UML:Parameter xmi.id="y4IdfyCMYO8K" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="igkwOEFnNKkk" visibility="public" isLeaf="false" name="get_M" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="29rHJGH1v1xJ" type="sMqKb1jahREt" kind="return"/>
          <UML:Parameter xmi.id="BZRkLJrJO7u1" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="DA4aTnK9j7gl" visibility="public" isLeaf="false" name="get_T" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="PPoKQjbesgCL" type="sMqKb1jahREt" kind="return"/>
          <UML:Parameter xmi.id="Gf777HfGo5z9" visibility="private" type="bAqHwrn1DRcW" name="get_all_points" isSpecification="false" value="False"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="TVSAa9tyFVx7" visibility="public" isLeaf="false" name="get_Bavg" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="rFzMQ78oUu8u" type="sMqKb1jahREt" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="ckWUOhnrCFzm" visibility="public" isLeaf="false" name="get_Mavg" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="OsjeNejEuhYK" type="sMqKb1jahREt" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="og8IZFABxfdL" visibility="public" isLeaf="false" name="get_Tavg" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="MQAWf9G21zeM" type="sMqKb1jahREt" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="eLYY26qokx6J" visibility="public" isLeaf="false" name="get_valid_points" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="CFS7s5SCTci7" type="0aoJVHyIpFxa" kind="return"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization xmi.id="cdPhDVotQjKF" visibility="public" name="" discriminator="" child="Kc7CcVLUtJ7u" parent="QOUQ0IZiF5QE" isSpecification="false" namespace="Logical View"/>
      <UML:Class xmi.id="Mlrj4ZGDBf4b" visibility="public" isLeaf="false" name="boo" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false"/>
      <UML:Class xmi.id="dOEz1MEtsDMN" visibility="public" isLeaf="false" name="list" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false"/>
      <UML:Class xmi.id="0aoJVHyIpFxa" visibility="public" isLeaf="false" name="bool[*]" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false"/>
      <UML:Class xmi.id="EuLk2hlR12dZ" visibility="public" isLeaf="false" name="obj" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false"/>
      <UML:Generalization xmi.id="WA94onjJgQGy" visibility="public" name="" discriminator="" child="QOUQ0IZiF5QE" parent="Kc7CcVLUtJ7u" isSpecification="false" namespace="Logical View"/>
      <UML:Class xmi.id="GUM15Sk5jOLA" visibility="public" isLeaf="false" name="CFMSPlotter" isAbstract="false" isSpecification="false" namespace="Logical View" isRoot="false">
       <UML:Classifier.feature>
        <UML:Operation xmi.id="ol7baxPWFjjr" visibility="public" isLeaf="false" name="__init__" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false"/>
        <UML:Operation xmi.id="trNaEik0Ssb0" visibility="public" isLeaf="false" name="plot_B_M" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="Y0DKdYDryJVU" visibility="private" type="sMqKb1jahREt" name="B" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="DP5gYG9knR2n" visibility="private" type="sMqKb1jahREt" name="M" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="VsWvi5vV3PWl" visibility="private" type="eueQfe6kKulO" name="label" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="vpnFcuj7kF0Q" visibility="public" isLeaf="false" name="plot_T_M" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="x4I75CIAXOgp" visibility="private" type="sMqKb1jahREt" name="T" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="bl8xSeHQiXVn" visibility="private" type="sMqKb1jahREt" name="M" isSpecification="false" value=""/>
          <UML:Parameter xmi.id="CXKI2uUddda6" visibility="private" type="eueQfe6kKulO" name="label" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="wbefi9zkNPWn" visibility="public" isLeaf="false" name="set_xlim" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="XE45VjRBobfx" visibility="private" type="6MebLl1Ek9lq" name="xmin" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="FYcbv6OfkukV" visibility="public" isLeaf="false" name="set_ylim" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="xOylJh3qv5vQ" visibility="private" type="6MebLl1Ek9lq" name="ymin" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="6FnpAVKfp207" visibility="public" isLeaf="false" name="legend" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="GYXTT0iwyqX3" visibility="private" type="eueQfe6kKulO" name="loc" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="5AEuCE0QnXtE" visibility="public" isLeaf="false" name="tight_layout" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false"/>
        <UML:Operation xmi.id="4PaTzR34bHyl" visibility="public" isLeaf="false" name="savefig" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter xmi.id="WwBHT3VzaeTy" visibility="private" type="eueQfe6kKulO" name="savename" isSpecification="false" value=""/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation xmi.id="TMr2eom8kxNC" visibility="public" isLeaf="false" name="show" isAbstract="false" isQuery="false" isSpecification="false" isRoot="false"/>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization xmi.id="XeEI5F5PmTMs" visibility="public" name="" discriminator="" child="9ltR32HpdIZq" parent="GUM15Sk5jOLA" isSpecification="false" namespace="Logical View"/>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams>
       <diagram showstereotype="1" name="class diagram" showopsig="1" showatts="1" showpackage="1" canvasheight="1232.7" type="1" showattsig="1" snapy="25" snapgrid="0" font="DejaVu Sans,12,-1,0,50,0,0,0,0,0" linewidth="1" showops="1" snapx="25" textcolor="#000000" showattribassocs="1" snapcsgrid="0" isopen="1" linecolor="#000000" fillcolor="#ffffff" usefillcolor="1" zoom="30,59022862539062" backgroundcolor="#ffffff" canvaswidth="1493.61" showpubliconly="1" showscope="1" localid="-1" xmi.id="38OKbQpxfm3Y" showgrid="0" documentation="" griddotcolor="#000000">
        <widgets>
         <classwidget showoperations="1" showstereotype="1" isinstance="0" showopsigs="601" showpackage="1" x="-3015.88" font="DejaVu Sans,12,-1,5,50,0,0,0,0,0" linewidth="0" showattributes="1" textcolor="#000000" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" linecolor="#000000" fillcolor="#ffffff" usefillcolor="1" width="1000" height="475" showpubliconly="1" localid="jy7iwl4a6c69" showscope="1" xmi.id="Kc7CcVLUtJ7u" y="-1124.85" showattsigs="601"/>
         <classwidget showoperations="1" showstereotype="1" isinstance="0" showopsigs="601" showpackage="1" x="-2847.61" font="DejaVu Sans,12,-1,5,50,0,0,0,0,0" linewidth="0" showattributes="1" textcolor="#000000" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" linecolor="#000000" fillcolor="#ffffff" usefillcolor="1" width="749" height="551" showpubliconly="1" localid="guvQr2i1FA87" showscope="1" xmi.id="QOUQ0IZiF5QE" y="-521.874" showattsigs="601"/>
         <classwidget showoperations="1" showstereotype="1" isinstance="0" showopsigs="601" showpackage="1" x="-2019.63" font="DejaVu Sans,12,-1,0,50,0,0,0,0,0" linewidth="0" showattributes="1" textcolor="#000000" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" linecolor="#000000" fillcolor="#ffffff" usefillcolor="1" width="61" height="37" showpubliconly="1" localid="EaJfAzmtxtbr" showscope="1" xmi.id="9ltR32HpdIZq" y="-1203.57" showattsigs="601"/>
         <classwidget showoperations="1" showstereotype="1" isinstance="0" showopsigs="601" showpackage="1" x="-1961.27" font="DejaVu Sans,12,-1,5,50,0,0,0,0,0" linewidth="1" showattributes="1" textcolor="#000000" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" linecolor="#000000" fillcolor="#ffffff" usefillcolor="1" width="439" height="199" showpubliconly="1" localid="i7CU8VIZs7cU" showscope="1" xmi.id="GUM15Sk5jOLA" y="-1126.37" showattsigs="601"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget xmi.id="aC8FRx9ag02j" type="500" totalcountb="2" indexb="1" indexa="1" fillcolor="#ffffff" widgetbid="Kc7CcVLUtJ7u" font="DejaVu Sans,9,-1,0,50,0,0,0,0,0" textcolor="#000000" linewidth="0" seqnum="" linecolor="#000000" usesdiagramfillcolor="0" totalcounta="2" usefillcolor="1" usesdiagramusefillcolor="0" widgetaid="9ltR32HpdIZq">
          <linepath layout="Polyline">
           <startpoint startx="-2015.88" starty="-1166.57"/>
           <endpoint endx="-2015.88" endy="-1124.85"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" totalcountb="2" changeabilityA="900" type="510" font="DejaVu Sans,9,-1,0,50,0,0,0,0,0" linewidth="1" textcolor="#000000" indexb="1" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" widgetaid="Kc7CcVLUtJ7u" totalcounta="2" seqnum="" linecolor="#000000" fillcolor="#ffffff" usefillcolor="1" visibilityB="0" xmi.id="zjINTadCas9k" visibilityA="0" changeabilityB="900" widgetbid="QOUQ0IZiF5QE">
          <linepath layout="Polyline">
           <startpoint startx="-2098.61" starty="-649.85"/>
           <endpoint endx="-2098.61" endy="-521.874"/>
          </linepath>
          <floatingtext showstereotype="1" isinstance="0" pretext="+" x="-2241.61" font="DejaVu Sans,12,-1,0,50,0,0,0,0,0" linewidth="0" role="710" textcolor="#000000" usesdiagramfillcolor="0" usesdiagramusefillcolor="0" linecolor="#000000" fillcolor="#ffffff" text="data_container" usefillcolor="1" posttext="" width="141" height="23" localid="HC5DX5KorI3V" xmi.id="p8k0chPbRfxs" y="-546.874"/>
         </assocwidget>
         <assocwidget xmi.id="XeEI5F5PmTMs" type="500" totalcountb="2" indexb="1" indexa="1" fillcolor="#ffff00" widgetbid="GUM15Sk5jOLA" font="DejaVu Sans,12,-1,0,50,0,0,0,0,0" textcolor="none" linewidth="1" seqnum="" linecolor="#000000" usesdiagramfillcolor="0" totalcounta="2" usefillcolor="1" usesdiagramusefillcolor="1" widgetaid="9ltR32HpdIZq">
          <linepath layout="Polyline">
           <startpoint startx="-1958.63" starty="-1166.57"/>
           <endpoint endx="-1958.63" endy="-1126.37"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model xmi.id="Use Case View" visibility="public" isLeaf="false" name="Use Case View" stereotype="folder" isAbstract="false" isSpecification="false" namespace="m1" isRoot="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model xmi.id="Component View" visibility="public" isLeaf="false" name="Component View" stereotype="folder" isAbstract="false" isSpecification="false" namespace="m1" isRoot="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model xmi.id="Deployment View" visibility="public" isLeaf="false" name="Deployment View" stereotype="folder" isAbstract="false" isSpecification="false" namespace="m1" isRoot="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model xmi.id="Entity Relationship Model" visibility="public" isLeaf="false" name="Entity Relationship Model" stereotype="folder" isAbstract="false" isSpecification="false" namespace="m1" isRoot="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings documentation="" uniqueid="0wzyDUQk6e2A" viewid="38OKbQpxfm3Y"/>
  <listview>
   <listitem type="800" id="Views" open="1">
    <listitem type="821" id="Component View" open="1"/>
    <listitem type="827" id="Deployment View" open="1"/>
    <listitem type="836" id="Entity Relationship Model" open="1"/>
    <listitem type="801" id="Logical View" open="1">
     <listitem type="813" id="Mlrj4ZGDBf4b" open="1"/>
     <listitem type="813" id="0aoJVHyIpFxa" open="1"/>
     <listitem type="813" id="9ltR32HpdIZq" open="0"/>
     <listitem type="813" id="QOUQ0IZiF5QE" open="0">
      <listitem type="815" id="5wJ9sVALi1bQ" open="0"/>
      <listitem type="814" id="ojellF3SlGfb" open="0"/>
      <listitem type="814" id="y6tN8couJSd4" open="0"/>
      <listitem type="815" id="hgOE6Reegpvo" open="0"/>
      <listitem type="815" id="5sCC3sEoZS5P" open="0"/>
      <listitem type="814" id="9qJbnkvFD68M" open="0"/>
      <listitem type="814" id="V5zoVatBFObC" open="0"/>
      <listitem type="814" id="qHB2uQj2P1iS" open="0"/>
      <listitem type="814" id="uWdtRuyuyxgT" open="0"/>
      <listitem type="814" id="VZckvEuRlDer" open="0"/>
      <listitem type="815" id="q1ptmXHiGjUJ" open="0"/>
      <listitem type="815" id="TVSAa9tyFVx7" open="0"/>
      <listitem type="815" id="igkwOEFnNKkk" open="0"/>
      <listitem type="815" id="ckWUOhnrCFzm" open="0"/>
      <listitem type="815" id="DA4aTnK9j7gl" open="0"/>
      <listitem type="815" id="og8IZFABxfdL" open="0"/>
      <listitem type="815" id="eLYY26qokx6J" open="0"/>
      <listitem type="815" id="ntZShSGgoasO" open="0"/>
      <listitem type="814" id="n0hJmjSBRog1" open="0"/>
      <listitem type="814" id="EPZCzw3w1vH7" open="0"/>
      <listitem type="814" id="tb0kEpw0nbJZ" open="0"/>
      <listitem type="814" id="EXYwYiOMxaNr" open="0"/>
      <listitem type="815" id="dBx0rq0pu1Pd" open="0"/>
      <listitem type="815" id="8nq5xfFFlnsf" open="0"/>
      <listitem type="815" id="yzKB2kN8ehHV" open="0"/>
      <listitem type="815" id="crYLdO0L9Ai1" open="0"/>
      <listitem type="814" id="fgXQxC09hY3D" open="0"/>
      <listitem type="814" id="YZJF6MSKlzUj" open="0"/>
     </listitem>
     <listitem type="813" id="Kc7CcVLUtJ7u" open="0">
      <listitem type="815" id="ue4ae4HeJnIq" open="0"/>
      <listitem type="815" id="O84Q5ZsyBuWp" open="0"/>
      <listitem type="815" id="6I1VyGpaI6bU" open="0"/>
      <listitem type="814" id="zjINTadCas9k" open="0"/>
      <listitem type="815" id="1D6y889O14Yo" open="0"/>
      <listitem type="815" id="cpFf8ybQxv2C" open="0"/>
      <listitem type="815" id="14CXfmi2F5cR" open="0"/>
      <listitem type="815" id="vqIiJtbyZWKz" open="0"/>
      <listitem type="815" id="Bs9cG2JAyMW2" open="0"/>
      <listitem type="815" id="f7Wca54lBZNs" open="0"/>
      <listitem type="815" id="bWqJYwOswsY9" open="0"/>
      <listitem type="815" id="M2UiDPk80nGf" open="0"/>
      <listitem type="815" id="VJG3YO63TOvj" open="0"/>
      <listitem type="815" id="dygBU0AaaHA3" open="0"/>
      <listitem type="815" id="fHTedxgDzTaS" open="0"/>
      <listitem type="815" id="sO6a4ZvhgPJE" open="0"/>
      <listitem type="815" id="fsi5woysIkke" open="0"/>
      <listitem type="815" id="vQnmwlABnysb" open="0"/>
      <listitem type="814" id="Fa4pQDXfOctt" open="0"/>
      <listitem type="815" id="6taIn65jsXyQ" open="0"/>
      <listitem type="815" id="NSFAO8m5RgEK" open="0"/>
      <listitem type="815" id="ey0u5aOzWcZB" open="0"/>
      <listitem type="815" id="tUjhFtDoP48v" open="0"/>
      <listitem type="815" id="ixWhz2W74yD1" open="0"/>
     </listitem>
     <listitem type="813" id="GUM15Sk5jOLA" open="0">
      <listitem type="815" id="ol7baxPWFjjr" open="0"/>
      <listitem type="815" id="6FnpAVKfp207" open="0"/>
      <listitem type="815" id="trNaEik0Ssb0" open="0"/>
      <listitem type="815" id="vpnFcuj7kF0Q" open="0"/>
      <listitem type="815" id="4PaTzR34bHyl" open="0"/>
      <listitem type="815" id="wbefi9zkNPWn" open="0"/>
      <listitem type="815" id="FYcbv6OfkukV" open="0"/>
      <listitem type="815" id="TMr2eom8kxNC" open="0"/>
      <listitem type="815" id="5AEuCE0QnXtE" open="0"/>
     </listitem>
     <listitem type="807" id="38OKbQpxfm3Y" label="class diagram" open="0"/>
     <listitem type="830" id="Datatypes" open="0">
      <listitem type="829" id="W5aPuGOla1IM" open="1"/>
      <listitem type="829" id="hNNEZUTE0c0I" open="1"/>
      <listitem type="829" id="bAqHwrn1DRcW" open="1"/>
      <listitem type="829" id="GrGy0Bp3JDNt" open="1"/>
      <listitem type="829" id="FNBYHvwxIK9p" open="1"/>
      <listitem type="829" id="9iJRvhKUrAjm" open="1"/>
      <listitem type="829" id="sMqKb1jahREt" open="1"/>
      <listitem type="829" id="sW1TVHnMddgC" open="1"/>
      <listitem type="829" id="TE86II4nMeAG" open="1"/>
      <listitem type="829" id="AbivjTlxI0vI" open="1"/>
      <listitem type="829" id="6MebLl1Ek9lq" open="1"/>
      <listitem type="829" id="tlb9jUStAlK3" open="1"/>
      <listitem type="829" id="mc3mF23Hu0O9" open="1"/>
      <listitem type="829" id="tP0f1H5GeGow" open="1"/>
      <listitem type="829" id="1XlCwLj7vR0e" open="1"/>
      <listitem type="829" id="eueQfe6kKulO" open="1"/>
      <listitem type="829" id="4sz9Ft1todJR" open="1"/>
      <listitem type="829" id="QeXGoH0nmlzi" open="1"/>
      <listitem type="829" id="eY9oITrg5Pwr" open="1"/>
      <listitem type="829" id="6gn16ndzXC8G" open="1"/>
     </listitem>
     <listitem type="813" id="dOEz1MEtsDMN" open="1"/>
     <listitem type="813" id="EuLk2hlR12dZ" open="1"/>
    </listitem>
    <listitem type="802" id="Use Case View" open="1"/>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Python">
    <sourcecode id="ue4ae4HeJnIq" value="self.data_container=CFMSData()&#xa;self.log=''&#xa;"/>
    <sourcecode id="O84Q5ZsyBuWp" value="self.log+= '#' + entry + '\n';"/>
    <sourcecode id="6taIn65jsXyQ" value="self.add_log(entry)&#xa;print(entry)&#xa;"/>
    <sourcecode id="vQnmwlABnysb" value="self.data_container.data_path=data_path&#xa;datafile=open(data_path,&quot;r&quot;)&#xa;self.print_log(&quot;Loading data from &quot;+str(data_path))&#xa;header=datafile.readline().rstrip().split()&#xa;data=:&#xa;&#xa;&#xa;self.print_log(&quot;&quot;)&#xa;self.print_log(&quot;Found columns:&quot;)&#xa;for datahead in header:&#xa;  self.print_log(str(datahead))&#xa;  data[datahead]=[]&#xa;&#xa;for line in datafile:&#xa;  linestrip=line.strip()&#xa;  if linestrip.startswith(&quot;;continue split_line=linestrip.split()&#xa;  for i,val in enumerate(split_line):&#xa;    data[header[i]].append(float(val))&#xa;&#xa;&#xa;datafile.close()&#xa;self.print_log(&quot;&quot;)&#xa;for datahead in data:&#xa;  data[datahead]=np.asarray(data[datahead])&#xa;&#xa;if&quot;moment_(emu)&quot;in data:&#xa;  data[&quot;moment_(emu)&quot;]*=1e3&#xa;  self.print_log(&quot;Transformed data from column 'moment_(emu)' &quot;+\&#xa;  &quot;from emu to memu by multiplication with 1000.&quot;)&#xa;self.data_container.set_data(header,data)&#xa;self.print_log(&quot;Loaded &quot;+str(self.data_container.N_pts)+\&#xa;&quot; datapoints.&quot;)"/>
    <sourcecode id="NSFAO8m5RgEK" value="self.print_log(&quot;Averaging data, combining every &quot;+str(N_averages)+\&#xa;&quot; points.&quot;)B_avg=[]&#xa;sB_avg=[]&#xa;M_avg=[]&#xa;sM_avg=[]&#xa;T_avg=[]&#xa;sT_avg=[]&#xa;B=self.data_container.get_B()&#xa;M=self.data_container.get_M()&#xa;T=self.data_container.get_T()&#xa;n_pts=len(B)&#xa;for i in range(0,n_pts,N_averages):&#xa;  cur_b_avg=B[i:i+N_averages]&#xa;  cur_m_avg=M[i:i+N_averages]&#xa;  cur_t_avg=T[i:i+N_averages]&#xa;  if len(cur_b_avg)!=N_averages or\&#xa;  len(cur_m_avg)!=N_averages or\len(cur_t_avg)!=N_averages:&#xa;    self.print_log(&quot;Skipped line &quot;+str(i)+\&#xa;    &quot;: Does not commensurate.&quot;)continue&#xa;&#xa;  B_avg.append(np.mean(cur_b_avg))&#xa;  sB_avg.append(np.std(cur_b_avg,ddof=1))&#xa;  M_avg.append(np.mean(cur_m_avg))&#xa;  sM_avg.append(np.std(cur_m_avg,ddof=1))&#xa;  T_avg.append(np.mean(cur_t_avg))&#xa;  sT_avg.append(np.std(cur_t_avg,ddof=1))&#xa;&#xa;B_avg=np.asarray(B_avg)&#xa;sB_avg=np.asarray(sB_avg)&#xa;M_avg=np.asarray(M_avg)&#xa;sM_avg=np.asarray(sM_avg)&#xa;T_avg=np.asarray(T_avg)&#xa;sT_avg=np.asarray(sT_avg)&#xa;self.data_container.set_averaged_data(N_averages,\&#xa;(B_avg,sB_avg),\(T_avg,sT_avg),\(M_avg,sM_avg))self.print_log(&quot;Average data contains &quot;+\&#xa;str(self.data_container.N_pts_averaged)+\&quot; data points.&quot;)"/>
    <sourcecode id="6I1VyGpaI6bU" value="''';Cleans data by forming for every point the median with npts_mean&#xa;points surrounding it(median filter).Data points which are more distant&#xa;than threshold are marked for cleaning.&#xa;''';self.print_log(&quot;Cleaning data lists from spurious peaks.&quot;)&#xa;B,M=self.get_BM(get_all_points=True,supress_log=True)&#xa;T=self.data_container.get_T(get_all_points=True)&#xa;M_mean=spsig.medfilt(M,M_npts_mean)&#xa;M_diff=M-M_mean&#xa;M_peak_outlier=np.abs(M_diff)>M_threshold&#xa;invalid_points=M_peak_outlier&#xa;if not TM_mode:&#xa;  B_mean=spsig.medfilt(B,B_npts_mean)&#xa;  B_diff=B-B_mean&#xa;  B_peak_outlier=np.abs(B_diff)>B_threshold&#xa;  invalid_points=np.logical_or(invalid_points,B_peak_outlier)&#xa;&#xa;B_masked=B[invalid_points]&#xa;M_masked=M[invalid_points]&#xa;T_masked=T[invalid_points]&#xa;B_clean=B[-invalid_points]&#xa;M_clean=M[-invalid_points]&#xa;T_clean=T[-invalid_points]&#xa;if show:&#xa;  self.fig,self.ax=plt.subplots()&#xa;  self.ax.axhline(0,c='gray')&#xa;  if TM_mode:&#xa;    self.ax.plot(T,M,label='Raw Data',color='blue',marker='.',ls='None')&#xa;    self.ax.plot(T,M_mean,label='Mean Data',marker='None',\&#xa;    ls='-',color='black')with warnings.catch_warnings():&#xa;      warnings.filterwarnings(&quot;ignore&quot;,module=&quot;matplotlib&quot;)&#xa;      self.ax.plot(T_masked,M_masked,label='Masked Points',color='red',\&#xa;      ls='None',marker='$^\circ$',markersize=10)self.ax.set_xlabel(&quot;$ \mathit{T} \, / \, K$&quot;)&#xa;&#xa;&#xa;  else:&#xa;    self.ax.plot(B,M,label='Raw Data',color='blue',marker='.',ls='None')&#xa;    self.ax.plot(B_mean,M_mean,label='Mean Data',marker='None',\&#xa;    ls='-',color='black')with warnings.catch_warnings():&#xa;      warnings.filterwarnings(&quot;ignore&quot;,module=&quot;matplotlib&quot;)&#xa;      self.ax.plot(B_masked,M_masked,label='Masked Points',color='red',\&#xa;      ls='None',marker='$^\circ$',markersize=10)self.ax.set_xlabel(&quot;$ \mathit{\mu_0 H} \, / \, T$&quot;)&#xa;&#xa;&#xa;  self.ax.set_ylabel(&quot;$ \mathit{M} \, / \, memu$&quot;)&#xa;  self.ax.legend(loc='best')&#xa;  self.fig.tight_layout()&#xa;&#xa;self.data_container.set_data_invalid(invalid_points)&#xa;self.print_log('Set array for validated points')&#xa;"/>
    <sourcecode id="ey0u5aOzWcZB" value="B=self.data_container.get_B(get_all_points=True)&#xa;valid_point=np.ones(len(B),dtype=bool)&#xa;if up_to>0:&#xa;  for ib,b_val in enumerate(B):&#xa;    if b_val&lt;up_to:&#xa;      valid_point[ib]=False&#xa;&#xa;    else:&#xa;      break&#xa;&#xa;&#xa;&#xa;else:&#xa;  for ib,b_val in enumerate(B):&#xa;    if b_val>up_to:&#xa;      valid_point[ib]=False&#xa;&#xa;    else:&#xa;      break&#xa;&#xa;&#xa;&#xa;self.data_container.set_data_invalid(-valid_point)&#xa;"/>
    <sourcecode id="14CXfmi2F5cR" value="B,M=self.get_BM(supress_log=True)&#xa;fit_range=np.logical_and(B0&lt;B,B&lt;B1)&#xa;B_fit=B[fit_range]&#xa;M_fit=M[fit_range]&#xa;if m_init is None:&#xa;  m_init=(M_fit[-1]-M_fit[0])/(B_fit[-1]-B_fit[0])&#xa;&#xa;if b_init is None:&#xa;  b_init=M_fit[0]-B_fit[0]*m_init&#xa;&#xa;linear_model=lambda m,b,B_lin:m*B_lin+b&#xa;def fit_between(B_fit,M_fit,m_init,b_init):&#xa;  linear_residuum=lambda p:linear_model(p['m'],p['b'],B_fit)-M_fit&#xa;  p=lmfit.Parameters()&#xa;  p.add(&quot;m&quot;,m_init,vary=vary_m)&#xa;  p.add(&quot;b&quot;,b_init,vary=vary_b)&#xa;  self.print_log(&quot;Running linear fit between B=(&quot;+\&#xa;  str(min(B_fit))+' .. '+str(max(B_fit))+&quot;) with LM algorithm.&quot;)fit_result=lmfit.minimize(linear_residuum,p)&#xa;  self.print_log(lmfit.fit_report(fit_result))&#xa;  return fit_result&#xa;&#xa;fit_result=fit_between(B_fit,M_fit,m_init,b_init)&#xa;if fit_both_sides:&#xa;  fit_range2=np.logical_and(-B1&lt;B,B&lt;-B0)&#xa;  B_fit2=B[fit_range2]&#xa;  M_fit2=M[fit_range2]&#xa;  fit_result2=fit_between(B_fit2,M_fit2,\&#xa;  fit_result.params['m'],\-fit_result.params['b'])m1=fit_result.params['m']&#xa;  m2=fit_result2.params['m']&#xa;  b1=fit_result.params['b']&#xa;  b2=fit_result2.params['b']&#xa;  pts1=fit_result.ndata&#xa;  pts2=fit_result2.ndata&#xa;  mean_slope=(m1.value*pts1+m2.value*pts2)/(pts1+pts2)&#xa;  mean_slope_std=np.sqrt((m1.stderr*pts1)**2+(m2.stderr*pts2)**2)/\&#xa;  (pts1+pts2)mean_offset=(b1.value*pts1-b2.value*pts2)/(pts1+pts2)&#xa;  mean_offset_std=np.sqrt((b1.stderr*pts1)**2+(b2.stderr*pts2)**2)/\&#xa;  (pts1+pts2)fit_result.params['m'].value=mean_slope&#xa;  fit_result.params['m'].stderr=mean_slope_std&#xa;  fit_result.params['b'].value=mean_offset&#xa;  fit_result.params['b'].stderr=mean_offset_std&#xa;&#xa;self.data_container.set_diamagnetic_fit(fit_result)&#xa;if show:&#xa;  self.fig,self.ax=plt.subplots()&#xa;  self.ax.axhline(0,c='gray')&#xa;  self.ax.plot(B,M,label='Data',color='gray',marker='.',ls='None')&#xa;  self.ax.plot(B_fit,M_fit,label='Fit Region',marker='.',\&#xa;  ls='None',color='red')self.ax.plot(B,linear_model(fit_result.params['m'],\&#xa;  fit_result.params['b'],B),\label='Linear Fit',marker='None',\ls='-',color='black')if fit_both_sides:&#xa;    self.ax.plot(B_fit2,M_fit2,marker='.',\&#xa;    ls='None',color='red')self.ax.plot(B,linear_model(fit_result.params['m'],\&#xa;    -fit_result.params['b'],B),\marker='None',\ls='-',color='black')&#xa;  self.ax.set_xlabel(&quot;$ \mu_0 \mathit{ H} \, / \, T$&quot;)&#xa;  self.ax.set_ylabel(&quot;$ \mathit{M} \, / \, memu$&quot;)&#xa;  self.ax.legend(loc='best')&#xa;  self.fig.tight_layout()&#xa;&#xa;"/>
    <sourcecode id="M2UiDPk80nGf" value="return self.data_container.diamagnetic_fit.params['m']&#xa;"/>
    <sourcecode id="bWqJYwOswsY9" value="return self.data_container.diamagnetic_fit.params['b']&#xa;"/>
    <sourcecode id="tUjhFtDoP48v" value="return self.data_container.diamagnetic_fit.params['b']&#xa;"/>
    <sourcecode id="fsi5woysIkke" value="if not supress_log:&#xa;  self.print_log('Loading '+string)&#xa;&#xa;data=self.data_container.get(string,get_all_points)&#xa;return data&#xa;"/>
    <sourcecode id="vqIiJtbyZWKz" value="return self.get(self.data_container.B_string,get_all_points,supress_log)&#xa;"/>
    <sourcecode id="dygBU0AaaHA3" value="return self.get(self.data_container.T_string,get_all_points,supress_log)&#xa;"/>
    <sourcecode id="VJG3YO63TOvj" value="return self.get(self.data_container.M_string,get_all_points,supress_log)&#xa;"/>
    <sourcecode id="Bs9cG2JAyMW2" value="if not supress_log:&#xa;  self.print_log('Loading '+self.data_container.B_string+' and '+\&#xa;  self.data_container.M_string)&#xa;B=self.data_container.get_B(get_all_points)&#xa;M=self.data_container.get_M(get_all_points)&#xa;return B,M&#xa;"/>
    <sourcecode id="fHTedxgDzTaS" value="if not supress_log:&#xa;  self.print_log('Loading '+self.data_container.T_string+' and '+\&#xa;  self.data_container.M_string)&#xa;T=self.data_container.get_T(get_all_points)&#xa;M=self.data_container.get_M(get_all_points)&#xa;return T,M&#xa;"/>
    <sourcecode id="f7Wca54lBZNs" value="B,sB=self.data_container.get_Bavg()&#xa;M,sM=self.data_container.get_Mavg()&#xa;return B,sB,M,sM&#xa;"/>
    <sourcecode id="sO6a4ZvhgPJE" value="T,sT=self.data_container.get_Tavg()&#xa;M,sM=self.data_container.get_Mavg()&#xa;return T,sT,M,sM&#xa;"/>
    <sourcecode id="cpFf8ybQxv2C" value="if export_file is None:&#xa;  export_file=self.data_container.data_path.rsplit(&quot;.&quot;,1)[0]+&quot;_extracted.xye&quot;&#xa;&#xa;B=self.get_B(get_all_points=True,supress_log=True)&#xa;M=self.get_M(get_all_points=True,supress_log=True)&#xa;T=self.get_T(get_all_points=True,supress_log=True)&#xa;valid_points=self.data_container.get_valid_points()&#xa;self.print_log(&quot;Exporting data to &quot;+export_file)&#xa;savefile=open(export_file,&quot;w&quot;)&#xa;savefile.write(self.log)&#xa;savefile.write(&quot;;for i in range(len(B)):&#xa;  if not valid_points[i]:&#xa;    savefile.write(';&#xa;  savefile.write(str(B[i])+&quot;\t&quot;+\&#xa;  str(M[i])+&quot;\t&quot;+\str(T[i])+&quot;\n&quot;)&#xa;savefile.close()&#xa;"/>
    <sourcecode id="1D6y889O14Yo" value="if export_file is None:&#xa;  export_file=self.data_container.data_path.rsplit(&quot;.&quot;,1)[0]+&quot;_extracted.xye&quot;&#xa;&#xa;B,sB=self.get_Bavg()&#xa;M,sM=self.get_Mavg()&#xa;T,sT=self.get_Tavg()&#xa;self.print_log(&quot;Export averaged data to &quot;+export_file)&#xa;savefile=open(export_file,&quot;w&quot;)&#xa;savefile.write(self.log)&#xa;savefile.write(&quot;;for i in range(self.data_container.N_pts_avg):&#xa;  savefile.write(str(B[i])+&quot;\t&quot;+\&#xa;  str(sB[i])+&quot;\t&quot;+\str(M[i])+&quot;\t&quot;+\str(sM[i])+&quot;\t&quot;+\str(T[i])+&quot;\t&quot;+\str(sT[i])+&quot;\n&quot;)&#xa;savefile.close()&#xa;"/>
    <sourcecode id="5wJ9sVALi1bQ" value="self.data_path=''&#xa;self.header=[]&#xa;self.data=:&#xa;&#xa;&#xa;self.N_pts=0&#xa;self.data_loaded=False&#xa;self.averaged_data=:&#xa;&#xa;&#xa;self.N_pts_averaged=0&#xa;self.N_averages=1&#xa;self.B_string='B_analog_(T)'&#xa;self.T_string='sensor_B_(K)'&#xa;self.M_string='moment_(emu)'&#xa;self.data_averaged=False&#xa;self.valid_point=None&#xa;self.diamagnetic_fit=None&#xa;self.do_diamagnetic_correction=False&#xa;"/>
    <sourcecode id="yzKB2kN8ehHV" value="self.header=header&#xa;self.data=data&#xa;self.N_pts=len(data[header[0]])&#xa;self.valid_point=np.ones(self.N_pts,dtype=bool)&#xa;self.data_loaded=True&#xa;"/>
    <sourcecode id="dBx0rq0pu1Pd" value="self.N_averages=N_averages&#xa;self.averaged_data[self.B_string]=Bavg&#xa;self.averaged_data[self.T_string]=Tavg&#xa;self.averaged_data[self.M_string]=Mavg&#xa;self.N_pts_averaged=len(self.averaged_data[self.B_string][0])&#xa;self.data_averaged=True&#xa;"/>
    <sourcecode id="8nq5xfFFlnsf" value="if len(invalid_points)!=self.N_pts:&#xa;  print('WARNING: Trying to set data (Pts: '+str(self.N_pts)+\&#xa;  ') invalid with array that has length '+\str(len(invalid_points)))&#xa;self.valid_point=np.logical_and(self.valid_point,-invalid_points)&#xa;"/>
    <sourcecode id="crYLdO0L9Ai1" value="self.diamagnetic_fit=diamagnetic_fit&#xa;self.do_diamagnetic_correction=True&#xa;"/>
    <sourcecode id="5sCC3sEoZS5P" value="if not data_string in self.data:&#xa;  sys.exit(&quot;ERROR: Unable to find &quot;+data_string+&quot; in data.&quot;)&#xa;&#xa;"/>
    <sourcecode id="hgOE6Reegpvo" value="if not data_string in self.averaged_data:&#xa;  sys.exit(&quot;ERROR: Unable to find &quot;+data_string+&quot; in averaged data.&quot;)&#xa;&#xa;"/>
    <sourcecode id="ntZShSGgoasO" value="self.check_data_loaded(string)&#xa;if get_all_points:&#xa;  return self.data[string]&#xa;&#xa;else:&#xa;  return self.data[string][self.valid_point]&#xa;&#xa;"/>
    <sourcecode id="q1ptmXHiGjUJ" value="return self.get(self.B_string)&#xa;"/>
    <sourcecode id="igkwOEFnNKkk" value="self.check_data_loaded(self.M_string)&#xa;if get_all_points:&#xa;  M_values=self.data[self.M_string]&#xa;&#xa;else:&#xa;  M_values=self.data[self.M_string][self.valid_point]&#xa;&#xa;if self.do_diamagnetic_correction:&#xa;  M_values-=self.diamagnetic_fit.params['m'].value*\&#xa;  self.get_B(get_all_points)&#xa;return M_values&#xa;"/>
    <sourcecode id="DA4aTnK9j7gl" value="return self.get(self.T_string)&#xa;"/>
    <sourcecode id="TVSAa9tyFVx7" value="self.check_average_data_loaded(self.B_string)&#xa;return self.averaged_data[self.B_string]&#xa;"/>
    <sourcecode id="ckWUOhnrCFzm" value="self.check_average_data_loaded(self.M_string)&#xa;return self.averaged_data[self.M_string]&#xa;"/>
    <sourcecode id="og8IZFABxfdL" value="self.check_average_data_loaded(self.T_string)&#xa;return self.averaged_data[self.T_string]&#xa;"/>
    <sourcecode id="eLYY26qokx6J" value="return self.valid_point"/>
    <sourcecode id="ol7baxPWFjjr" value="super(CFMSPlotter,self).__init__()&#xa;"/>
    <sourcecode id="trNaEik0Ssb0" value="self.fig,self.ax=plt.subplots()&#xa;self.ax.plot(B,M,label=label,marker=marker)&#xa;self.ax.set_xlabel(&quot;$ \mathit{\mu_0 H} \, / \, &quot;+Bunit+&quot;$&quot;)&#xa;self.ax.set_ylabel(&quot;$ \mathit{M} \, / \, &quot;+Munit+&quot;$&quot;)&#xa;"/>
    <sourcecode id="vpnFcuj7kF0Q" value="self.fig,self.ax=plt.subplots()&#xa;self.ax.plot(T,M,label=label,marker=marker)&#xa;self.ax.set_xlabel(&quot;$ \mathit{T} \, / \, &quot;+Tunit+&quot;$&quot;)&#xa;self.ax.set_ylabel(&quot;$ \mathit{M} \, / \, &quot;+Munit+&quot;$&quot;)&#xa;"/>
    <sourcecode id="wbefi9zkNPWn" value="self.ax.set_xlim(xmin,xmax)&#xa;"/>
    <sourcecode id="FYcbv6OfkukV" value="self.ax.set_ylim(ymin,ymax)&#xa;"/>
    <sourcecode id="6FnpAVKfp207" value="self.fig.legend(loc='best')&#xa;"/>
    <sourcecode id="5AEuCE0QnXtE" value="self.fig.tight_layout()&#xa;"/>
    <sourcecode id="4PaTzR34bHyl" value="self.fig.savefig(savename)&#xa;print(&quot;Saved plot to &quot;+savename)&#xa;"/>
    <sourcecode id="TMr2eom8kxNC" value="plt.show()"/>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
